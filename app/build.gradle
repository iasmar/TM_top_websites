apply plugin: 'com.android.application'

android {
    useLibrary 'org.apache.http.legacy'
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.iasmar.toronto"

        versionCode = Integer.valueOf("" + appVersionCode).intValue()
        versionName "${appVersionName}"
        minSdkVersion rootProject.ext.minSdkVersion

        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
        vectorDrawables.useSupportLibrary = true

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-DEBUG'
            debuggable true
            minifyEnabled false
            useProguard false
            // No signing config as we do this separately.
            buildConfigField("String", "BASE_URL", "\"${devServer}\"")
        }
        qualityAssurance {
            applicationIdSuffix '.qa'
            versionNameSuffix '-QA'
            debuggable true
            minifyEnabled true
            signingConfig signingConfigs.debug
            // No signing config as we do this separately.
            buildConfigField("String", "BASE_URL", "\"${stagingServer}\"")
        }
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'

            debuggable false
            minifyEnabled false
            useProguard true
            // No signing config as we do this separately.
            buildConfigField("String", "BASE_URL", "\"${productionServer}\"")


        }
    }
    signingConfigs {

        //TODO add  buildTypes key signature.

//        debug {
//
//        }
//
//        qualityAssurance {
//
//        }
//
//        // Notice the production keystore and password are not checked in. Signing resources for
//        // release builds are typically stored somewhere more secure than the source repo.
//        // This typically also means that release builds are signed manually rather than by
//        // Gradle.
//
//        release {
//
//        }
    }

    // Using gradle plugin 3 you need to specify flavor dimensions.
    flavorDimensions 'buildType'

    // If you need to add more flavors, consider using flavor dimensions.
    productFlavors {
        mock {
            dimension 'buildType'
            applicationIdSuffix = ".mock"
        }
        prod {
            dimension 'buildType'
        }
    }

    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name == 'release'
                && variant.getFlavors().get(0).name == 'mock') {
            variant.setIgnore(true)
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

/*
 Dependency versions are defined in the top level build.gradle file. This helps keeping track of
 all versions in a single place. This improves readability and helps managing project complexity.
 */
dependencies {
    // App's dependencies, including test
    implementation "com.android.support:appcompat-v7:${supportLibraryVersion}"
    implementation "com.android.support:cardview-v7:${supportLibraryVersion}"
    implementation "com.android.support:design:${supportLibraryVersion}"
    implementation "com.android.support:recyclerview-v7:${supportLibraryVersion}"
    implementation "com.android.support:support-v4:${supportLibraryVersion}"
    implementation "com.android.support.test.espresso:espresso-idling-resource:${espressoVersion}"
    implementation "com.google.guava:guava:${guavaVersion}"
    implementation "io.reactivex.rxjava2:rxjava:${rxjavaVersion}"
    implementation "io.reactivex.rxjava2:rxandroid:${rxandroidVersion}"
    implementation "com.squareup.sqlbrite2:sqlbrite:${sqlbriteVersion}"
    implementation "com.google.code.gson:gson:${googleGsonVersion}"
    implementation "com.squareup.okhttp3:okhttp:${okhttpVersion}"
    implementation "com.github.bumptech.glide:glide:${glideVersion}"
    implementation "com.github.PhilJay:MPAndroidChart:${mPAndroidChartVersion}"




    // Dependencies for local unit tests
    testImplementation "junit:junit:${junitVersion}"
    testImplementation "org.mockito:mockito-all:${mockitoVersion}"
    testImplementation "org.hamcrest:hamcrest-all:${hamcrestVersion}"
    testImplementation "com.squareup.okhttp3:mockwebserver:${okhttpVersion}"

    // Android Testing Support Library's runner and rules
    androidTestImplementation "com.android.support.test:runner:${runnerVersion}"
    androidTestImplementation "com.android.support.test:rules:${runnerVersion}"

    // Dependencies for Android unit tests
    androidTestImplementation "junit:junit:${junitVersion}"
    androidTestImplementation "org.mockito:mockito-core:${mockitoVersion}"
    androidTestImplementation "com.google.dexmaker:dexmaker:${dexmakerVersion}"
    androidTestImplementation "com.google.dexmaker:dexmaker-mockito:${dexmakerMockitoVersion}"

    // Espresso UI Testing
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${espressoVersion}"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:${espressoVersion}"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:${espressoVersion}"
    androidTestImplementation "com.android.support.test.espresso.idling:idling-concurrent:${espressoVersion}"

    // Resolve conflicts between main and test APK:
    androidTestImplementation "com.android.support:support-annotations:${supportLibraryVersion}"
    androidTestImplementation "com.android.support:support-v4:${supportLibraryVersion}"
    androidTestImplementation "com.android.support:recyclerview-v7:${supportLibraryVersion}"
    androidTestImplementation "com.android.support:appcompat-v7:${supportLibraryVersion}"
    androidTestImplementation "com.android.support:design:${supportLibraryVersion}"


}
